export interface Artist {
  id: string;
  name: string;
  location: string;
  latitude: number;
  longitude: number;
  duration: number; // en minutos
  walletAddress: string;
  createdAt: Date;
  isActive: boolean;
  userId: string; // Vinculado al usuario
  // Stream data
  streamId?: string; // ID 칰nico del stream
  streamTitle?: string;
  streamDescription?: string;
  viewerCount?: number;
}

export interface Token {
  symbol: string;
  name: string;
  address: string;
  decimals: number;
  icon?: string | JSX.Element; // MODIFICADO AQU칈: opcional y permite JSX.Element
}

export interface Donation {
  id: string;
  artistId: string;
  amount: string;
  token: Token; // Usar치 la interfaz Token actualizada
  txHash: string;
  donorAddress: string;
  timestamp: Date;
}

export interface UserLocation {
  latitude: number;
  longitude: number;
  address?: string;
}

export interface ArtistWithDistance extends Artist {
  distance?: number; // en kil칩metros
}

export type UserType = "user" | "artist";

export interface User {
  id: string;
  walletAddress: string;
  type: UserType;
  name: string;
  createdAt: Date;
  isActive: boolean;
  // Datos espec칤ficos del artista si aplica
  artistProfile?: {
    artisticName: string;
    bio?: string;
    genres?: string[];
  };
}

export interface AuthState {
  isAuthenticated: boolean;
  currentUser: User | null;
  isLoading: boolean;
}

export interface StreamData {
  id: string;
  artistId: string;
  title: string;
  description?: string;
  isLive: boolean;
  viewerCount: number;
  startedAt: Date;
  thumbnailUrl?: string;
  // Simulated stream URL for demo
  demoVideoUrl?: string;
}

Archivo 2: lib/stablecoins.ts (Modificado para usar Token de lib/types.ts)

import type { Token } from './types'; // Importar Token de lib/types.ts

// Array de stablecoins soportadas, usando la interfaz Token
export const SUPPORTED_STABLECOINS: Token[] = [
  {
    name: "Celo Dollar",
    symbol: "cUSD",
    address: "0x765DE816845861e75A25fCA122bb6898B8B1282a",
    decimals: 18,
    icon: "游눯", // Placeholder icon, puedes cambiarlo por una URL o componente SVG
  },
  {
    name: "USD Coin",
    symbol: "USDC",
    address: "0xcebA9300f2b948710d2653dD7B07f33A8B32118C",
    decimals: 6,
    icon: "游눳", // Placeholder icon
  },
  // Ejemplo de c칩mo podr칤as a침adir DAI en el futuro:
  // {
  //   name: "Dai Stablecoin",
  //   symbol: "DAI",
  //   address: "DIRECCION_DEL_CONTRATO_DAI_EN_CELO", 
  //   decimals: 18,
  //   icon: "游붑", // Placeholder icon
  // },
];

/**
 * Encuentra una stablecoin soportada por su s칤mbolo.
 * @param symbol El s칤mbolo de la stablecoin (ej. "cUSD").
 * @returns La informaci칩n de la stablecoin si se encuentra, de lo contrario undefined.
 */
export const findStablecoinBySymbol = (symbol: string): Token | undefined => {
  return SUPPORTED_STABLECOINS.find(coin => coin.symbol.toLowerCase() === symbol.toLowerCase());
};

/**
 * Encuentra una stablecoin soportada por su direcci칩n de contrato.
 * @param address La direcci칩n del contrato de la stablecoin.
 * @returns La informaci칩n de la stablecoin si se encuentra, de lo contrario undefined.
 */
export const findStablecoinByAddress = (address: string): Token | undefined => {
  return SUPPORTED_STABLECOINS.find(coin => coin.address.toLowerCase() === address.toLowerCase());
};
